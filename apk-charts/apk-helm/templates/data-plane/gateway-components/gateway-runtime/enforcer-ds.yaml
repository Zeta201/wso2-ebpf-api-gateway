apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: enforcer
  namespace: {{ .Release.Namespace}}
  labels: 
{{ include "apk-helm.pod.selectorLabels" (dict "root" . "app" "gateway" ) | indent 4}}
spec:
  selector:
    matchLabels:
{{ include "apk-helm.pod.selectorLabels" (dict "root" . "app" "gateway" ) | indent 6}}
  template:
    metadata:
      labels:
{{ include "apk-helm.pod.selectorLabels" (dict "root" . "app" "gateway" ) | indent 8}}
    spec:
      containers:
        - name: enforcer-agent
          image: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.image }}
          imagePullPolicy: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.imagePullPolicy }}
          ports:
            - containerPort: 8081
              protocol: "TCP"
            - containerPort: 9001
              protocol: "TCP"
            - containerPort: 8084
              protocol: "TCP"
            - containerPort: 9092
              protocol: "TCP"
{{ include "apk-helm.deployment.resources" .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.resources | indent 10 }}
{{ include "apk-helm.deployment.env" .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.env | indent 10 }}
            - name: ADAPTER_HOST_NAME
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ADAPTER_HOST
              value: {{ template "apk-helm.resource.prefix" . }}-adapter-service.{{ .Release.Namespace }}.svc
            - name: ENFORCER_PRIVATE_KEY_PATH
              value: /home/wso2/security/keystore/enforcer.key  
            - name: ENFORCER_PUBLIC_CERT_PATH
              value: /home/wso2/security/keystore/enforcer.crt
            - name: ENFORCER_SERVER_NAME
              value: {{ template "apk-helm.resource.prefix" . }}-enforcer-service.{{ .Release.Namespace }}.svc
            - name: TRUSTED_CA_CERTS_PATH
              value: "/home/wso2/security/truststore"
            - name: ADAPTER_XDS_PORT
              value : "18000"
            - name: ENFORCER_LABEL
              value : default
            - name: ENFORCER_REGION
              value: UNKNOWN
            - name: XDS_MAX_MSG_SIZE
              value: "4194304"
            - name: XDS_MAX_RETRIES 
              value: "3"
            - name: enforcer_admin_pwd
              value: admin
            - name: JAVA_OPTS
              value: -Dhttpclient.hostnameVerifier=AllowAll -Xms512m -Xmx512m -XX:MaxRAMFraction=2
    {{- if and .Values.wso2.apk.dp.gatewayRuntime.analytics .Values.wso2.apk.dp.gatewayRuntime.analytics.secretName }}
            - name: analytics_authToken
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.wso2.apk.dp.gatewayRuntime.analytics.secretName }}
                  key: "analytics_authToken"
            - name: analytics_authURL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.wso2.apk.dp.gatewayRuntime.analytics.secretName }}
                  key: "analytics_authURL"
    {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/enforcer.key
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certKeyFilename | default "tls.key" }}
            {{- else }}
              subPath: tls.key
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/keystore/enforcer.crt
              {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/apk.crt
              {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.caCertFileName | default "ca.crt" }}
            {{- else }}
              subPath: ca.crt
            {{- end }}
            - name: enforcer-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/enforcer.crt
              {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: adapter-truststore-secret-volume
              mountPath: /home/wso2/security/truststore/adapter.crt
              {{- if and .Values.wso2.apk.dp.adapter.configs .Values.wso2.apk.dp.adapter.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.adapter.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}  
            - name: router-keystore-secret-volume
              mountPath: /home/wso2/security/truststore/router.crt
              {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls }}
              subPath: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls.certFilename | default "tls.crt" }}
            {{- else }}
              subPath: tls.crt
            {{- end }}
            - name: log-conf-volume
              mountPath: /home/wso2/conf/
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2/security/keystore/mg.pem
              subPath: mg.pem
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2/security/truststore/mg.pem
              subPath: mg.pem
            - name: enforcer-jwt-secret-volume
              mountPath: /home/wso2/security/keystore/mg.key
              subPath: mg.key
            - name: enforcer-trusted-certs
              mountPath: /home/wso2/security/truststore/wso2carbon.pem
              subPath: wso2carbon.pem
            - name: idp-certificate-secret-volume
              mountPath: /home/wso2/security/truststore/idp.pem
               {{ if and .Values.wso2.apk.idp.signing .Values.wso2.apk.idp.signing.fileName }}
              subPath: {{ .Values.wso2.apk.idp.signing.fileName }}
            {{ else }}
              subPath: wso2carbon.pem
            {{ end }}
            {{ if and .Values.wso2.apk.idp.tls .Values.wso2.apk.idp.tls.fileName }}
            - name: idp-tls-certificate-secret-volume
              mountPath: /home/wso2/security/truststore/idp-tls.pem
              subPath: {{ .Values.wso2.apk.idp.tls.fileName }}
            {{ end }}
          
          readinessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.readinessProbe.failureThreshold }}
          livenessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.livenessProbe.failureThreshold }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      volumes:
      {{ if and .Values.wso2.apk.dp.enabled .Values.wso2.apk.dp.ratelimiter.enabled }}
        - name: ratelimiter-truststore-secret-volume
          secret:
            {{- if and .Values.wso2.apk.dp.ratelimiter.configs .Values.wso2.apk.dp.ratelimiter.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.ratelimiter.configs.tls.certificatesSecret | default (printf "%s-ratelimiter-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-ratelimiter-server-cert
          {{- end }}
      {{ end }}

        - name: enforcer-keystore-secret-volume
          secret: 
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.enforcer.configs.tls.certificatesSecret | default (printf "%s-enforcer-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-server-cert
          {{- end }}      
        - name: log-conf-volume
          configMap: 
            name: {{ template "apk-helm.resource.prefix" . }}-log-conf
        - name: router-keystore-secret-volume
          secret: 
            {{- if and .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.gatewayRuntime.deployment.router.configs.tls.certificatesSecret | default (printf "%s-gateway-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-gateway-server-cert
          {{- end }}     
        - name: adapter-truststore-secret-volume
          secret: 
          {{- if and .Values.wso2.apk.dp.adapter.configs .Values.wso2.apk.dp.adapter.configs.tls }}
            secretName: {{ .Values.wso2.apk.dp.adapter.configs.tls.secretName | default (printf "%s-adapter-server-cert" (include "apk-helm.resource.prefix" .)) }}
          {{- else }}
            secretName: {{ template "apk-helm.resource.prefix" . }}-adapter-server-cert
          {{- end }}
        - name: enforcer-jwt-secret-volume
          secret: 
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-keystore-secret
        - name: enforcer-trusted-certs
          secret: 
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-truststore-secret 
        - name: idp-certificate-secret-volume
          secret:
          {{ if and .Values.wso2.apk.idp.signing .Values.wso2.apk.idp.signing.secretName }}
            secretName: {{ .Values.wso2.apk.idp.signing.secretName }}
            {{else}}
            secretName: {{ template "apk-helm.resource.prefix" . }}-enforcer-truststore-secret
          {{ end}}

        {{ if and .Values.wso2.apk.idp.tls .Values.wso2.apk.idp.tls.secretName }}
        - name: idp-tls-certificate-secret-volume
          secret:
            secretName: {{ .Values.wso2.apk.idp.tls.secretName }}
          {{ end }}
        - name: tmp
          emptyDir: {}
